<html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
        <script src="/js/jquery-3.4.1.min.js"></script>

        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
            integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
            crossorigin=""/>
        <!-- Make sure you put this AFTER Leaflet's CSS -->
        <script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
            integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
            crossorigin="*"></script>

        <link rel="stylesheet" type="text/css" href="/bootstrap-4/css/bootstrap.min.css"/>

        <!--
            https://material.io/resources/icons/?style=baseline
        -->
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

        <!-- 
            https://fontawesome.com/ 
        -->
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.1/css/all.min.css" rel="stylesheet">

    <style>
        #map {
            height: 90%;
        }

        .marker-pin {
        width: 30px;
        height: 30px;
        border-radius: 50% 50% 50% 0;
        background: #c30b82;
        position: absolute;
        transform: rotate(-45deg);
        left: 50%;
        top: 50%;
        margin: -15px 0 0 -15px;
        }

        .marker-pin::after {
            content: '';
            width: 24px;
            height: 24px;
            margin: 3px 0 0 3px;
            background: #fff;
            position: absolute;
            border-radius: 50%;
        }

        .custom-div-icon i {
        position: absolute;
        width: 22px;
        font-size: 22px;
        left: 0;
        right: 0;
        margin: 10px auto;
        text-align: center;
        }

        .custom-div-icon i.awesome {
        margin: 12px auto;
        font-size: 17px;
        }

        .my-class {
            height:140px;
            width:280px;
        }
        .leaflet-popup-content { 
        width:auto !important; 
        }

    </style>
    </head>



    <body>
        <div class="alert alert-primary" role="alert">
            <button type="button" class="btn btn-primary" onclick="window.location.href = '/';">Home</button>
        </div>
        
        <div id="map"></div>

        <script>
        $( document ).ready(function() {
            var map = L.map("map");
            // Map Types
            // https://leaflet-extras.github.io/leaflet-providers/preview/
            var Esri_WorldStreetMap = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}', {
	            attribution: 'Tiles &copy; Esri'
            });
            Esri_WorldStreetMap.addTo(map);

            var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            });
            //OpenStreetMap_Mapnik.addTo(map);

            //L.tileLayer("https://{s}.tile.osm.org/{z}/{x}/{y}.png").addTo(map);

            map.setView([36.1627, -86.7816], 9);

            // https://gist.github.com/comp615/2288108
            // Example on adding numbers
            // ------------------------------------------

            // https://www.geoapify.com/create-custom-map-marker-icon/
           
        // 36.1627, -86.7816 Franklin
        // 35.91759, -86.79652 Downtown
        // 36.21349, -86.74291 Hart Lane
        // -----------------------------------------------------

            function testMarkers() {
                let icon,marker;

                icon = L.divIcon({
                    className: 'custom-div-icon',
                    html: "<div style='background-color:#c30b82;' class='marker-pin'></div><i class='material-icons'>account_circle</i>",
                    iconSize: [30, 42],
                    iconAnchor: [15, 42]
                });
                
                marker = L.marker([36.1627, -86.7816], {
                    icon: icon
                }).addTo(map);
                    
                icon = L.divIcon({
                                className: 'custom-div-icon',
                        html: "<div style='background-color:#4838cc;' class='marker-pin'></div><i class='far fa-laugh-beam awesome'>",
                        iconSize: [30, 42],
                        iconAnchor: [15, 42]
                    });
                marker = L.marker([35.91759, -86.79652], {
                    icon: icon
                }).addTo(map);

                icon = L.divIcon({
                                className: 'custom-div-icon',
                        html: "<div style='background-color:#4838cc;' class='marker-pin'></div><i class='far fa-angry awesome'>",
                        iconSize: [30, 42],
                        iconAnchor: [15, 42]
                    });
                marker = L.marker([36.21349, -86.74291], {
                    icon: icon
                }).addTo(map);
            }

            let icon;

            let iconOpen = L.divIcon({
                className: 'custom-div-icon',
                html: "<div style='background-color:green;' class='marker-pin'></div><i class='material-icons'>directions_car</i>",
                iconSize: [30, 42],
                iconAnchor: [15, 42]
            });
            let iconClosed = L.divIcon({
                className: 'custom-div-icon',
                html: "<div style='background-color:red;' class='marker-pin'></div><i class='material-icons'>directions_car</i>",
                iconSize: [30, 42],
                iconAnchor: [15, 42]
            });

            
            function fixMarkers() {
                // https://www.html5rocks.com/en/tutorials/cors/
                $.ajax({
                    url: "https://api-dev.tn.gov/IWTWeb/xml_IWT_Stats.aspx?controller=ACF_IWT_UnitsListXML",
                    type: 'GET',
                    dataType : 'json', // data type
                    contentType: 'text/plain',
                    success: function (data) {
                        var arr = data.Units.Unit;
                        console.log(arr)
                        for (var i = 0; i < arr.length; i++){
                            let record = arr[i];
                            let _unitid = record.UnitId;
                            let _unitName = record.UnitName;
                            let _officeStatus = record.OfficeStatus;
                            if(_officeStatus == 'Open'){
                                icon = iconOpen;
                            }else{
                                icon = iconClosed;
                            }

                            marker = L.marker([record.Latitude, record.Longitude]
                                ,{
                                    icon: icon
                                })
                            .addTo(map);
                            
                        }
                    },
                    error: function(xhr, status, error) {
                        console.log('error: '+xhr.responseText)
                    }
                });
               
            }
            

            function createMarkers() {
                //$.getJSON("/all.json",function(data){
                $.getJSON("https://api-dev.tn.gov/IWTWeb/xml_IWT_Stats.aspx?controller=ACF_IWT_UnitsListXML",function(data){
                    var arr = data.Units.Unit;
                    console.log(arr)
                    for (var i = 0; i < arr.length; i++){
                        let record = arr[i];
                        let _unitid = record.UnitId;
                        let _unitName = record.UnitName;
                        let _officeStatus = record.OfficeStatus;
                        if(_officeStatus == 'Open'){
                            icon = iconOpen;
                        }else{
                            icon = iconClosed;
                        }

                        marker = L.marker([record.Latitude, record.Longitude]
                            ,{
                                icon: icon
                            })
                        .addTo(map);

                        marker.bindPopup((layer)=>{
                            var el = document.createElement('div');
                            el.classList.add("my-class");

                            //$.getJSON("/44.json",function(data){
                            $.getJSON("https://api-dev.tn.gov/IWTWeb/xml_IWT_Stats.aspx?controller=ACF_IWT_UnitStatsXML&unitid="+_unitid,function(data){
                                
                                let timezone = '';
                                let timezoneName = record.StandardName;
                                if(timezoneName == 'Eastern Standard Time'){
                                    timezone = 'EST';
                                }else if(timezoneName == 'Central Standard Time'){
                                    timezone = 'CST';
                                }else{
                                    timezone = timezoneName;
                                }
                                el.innerHTML = 
                                // '<b>' + data.Unit.UnitName + '</b>' + ' - ' + data.Unit.OfficeStatus + '<br>'
                                    '<b>' + record.UnitName + '</b>' + ' - ' + data.Unit.OfficeStatus + '<br>'
                                    + data.Unit.Description + '<br>'
                                    + '<br>'
                                    + data.Unit.OfficeHours + ' ' + timezone + '<br>'
                                    + data.Unit.Address + '<br>'
                                    + '<br>'
                                    + 'People Waiting: ' + data.Unit.WaitingCount + '<br>'
                                    + 'Current Max Wait Time: ' + data.Unit.MaxWT + '<br>'
                                ;
                            });
                            return el;
                        });
                        
                    }
                });
            }

            //testMarkers();
            //fixMarkers();
            createMarkers();
            
        });
        </script>






        <script src="/bootstrap-4/js/bootstrap.min.js"></script>    

    </body>
</html>